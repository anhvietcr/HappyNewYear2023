#include "Text.h"
#include "Fireworks.h"
Text::Text(){
}

Text::~Text(){
}
//kiểm tra thời gian để hiển thị text
int Text::checkTimer(int time){
	if (10 >= time && time <= 20) return 1;
	else return 0;
}
void Text::showText(int time){
	const char* num9[] =
	{
		"                     ",
		"      999999999      ",
		"    99:::::::::99    ",
		"  99:::::::::::::99  ",
		" 9::::::99999::::::9 ",
		" 9:::::9     9:::::9 ",
		" 9:::::9     9:::::9 ",
		"  9:::::99999::::::9 ",
		"   99::::::::::::::9 ",
		"     99999::::::::9  ",
		"          9::::::9   ",
		"         9::::::9    ",
		"        9::::::9     ",
		"       9:::::9       ",
		"      9:::::9        ",
		"     9999999         ", NULL
	};
	const char* num8[] =
	{
		"                     ",
		"      888888888      ",
		"    88:::::::::88    ",
		"  88:::::::::::::88  ",
		" 8::::::88888::::::8 ",
		" 8:::::8     8:::::8 ",
		" 8:::::8     8:::::8 ",
		"  8:::::88888:::::8  ",
		"   8:::::::::::::8   ",
		"  8:::::88888:::::8  ",
		" 8:::::8     8:::::8 ",
		" 8:::::8     8:::::8 ",
		" 8::::::88888::::::8 ",
		"  88:::::::::::::88  ",
		"    88:::::::::88    ",
		"      888888888      ", NULL
	};
	const char* num7[] =
	{
		"                     ",
		" 77777777777777777777",
		" 7::::::::::::::::::7",
		" 7::::::::::::::::::7",
		" 777777777777:::::::7",
		"            7::::::7 ",
		"           7::::::7  ",
		"          7::::::7   ",
		"         7::::::7    ",
		"        7::::::7     ",
		"       7::::::7      ",
		"      7::::::7       ",
		"     7::::::7        ",
		"    7::::::7         ",
		"   7::::::7          ",
		"  77777777           ",NULL
	};
	const char* num6[] =
	{
		"                     ",
		"         66666666    ",
		"        6::::::6     ",
		"       6::::::6      ",
		"      6::::::6       ",
		"     6::::::6        ",
		"    6::::::6         ",
		"   6::::::::66666    ",
		"  6::::::::::::::6   ",
		" 6::::::66666:::::6  ",
		" 6:::::6     6:::::6 ",
		" 6:::::6     6:::::6 ",
		" 6::::::66666::::::6 ",
		"  66:::::::::::::66  ",
		"    66:::::::::66    ",
		"      666666666      ",NULL
	};
	const char* num5[] =
	{
		"                     ",
		" 555555555555555555  ",
		" 5::::::::::::::::5  ",
		" 5:::::555555555555  ",
		" 5:::::5             ",
		" 5:::::5             ",
		" 5:::::5555555555    ",
		" 5:::::::::::::::5   ",
		" 555555555555:::::5  ",
		"             5:::::5 ",
		"             5:::::5 ",
		" 5555555     5:::::5 ",
		" 5::::::55555::::::5 ",
		"  55:::::::::::::55  ",
		"    55:::::::::55    ",
		"      555555555      ",NULL
	};
	const char* num4[] =
	{
		"                     ",
		"        444444444    ",
		"       4::::::::4    ",
		"      4:::::::::4    ",
		"     4::::44::::4    ",
		"    4::::4 4::::4    ",
		"   4::::4  4::::4    ",
		"  4::::4   4::::4    ",
		" 4::::444444::::444  ",
		" 4::::::::::::::::4  ",
		" 4444444444:::::444  ",
		"           4::::4    ",
		"           4::::4    ",
		"         44::::::44  ",
		"         4::::::::4  ",
		"         4444444444  ",NULL
	};
	const char* num3[] =
	{
		"                     ",
		" 3333333333333333    ",
		" 3:::::::::::::::33  ",
		" 3::::::33333::::::3 ",
		" 3333333     3:::::3 ",
		"             3:::::3 ",
		"             3:::::3 ",
		"     33333333:::::3  ",
		"     3:::::::::::3   ",
		"     33333333:::::3  ",
		"             3:::::3 ",
		"             3:::::3 ",
		" 3333333     3:::::3 ",
		" 3::::::33333::::::3 ",
		" 3:::::::::::::::33  ",
		"  333333333333333    ",NULL
	};
	const char* num2[] =
	{
		"                     ",
		" 222222222222222     ",
		" 2:::::::::::::::22  ",
		" 2::::::222222:::::2 ",
		" 2222222     2:::::2 ",
		"             2:::::2 ",
		"             2:::::2 ",
		"          2222::::2  ",
		"     22222::::::22   ",
		"   22::::::::222     ",
		"  2:::::22222        ",
		" 2:::::2             ",
		" 2:::::2       222222",
		" 2::::::2222222:::::2",
		" 2::::::::::::::::::2",
		" 22222222222222222222",NULL
	};
	const char* num1[] =
	{  
		"                     ",
		"       1111111       ",
		"      1::::::1       ",
		"     1:::::::1       ",
		"     111:::::1       ",
		"        1::::1       ",
		"        1::::1       ",
		"        1::::1       ",
		"        1::::l       ",
		"        1::::l       ",
		"        1::::l       ",
		"        1::::l       ",
		"     111::::::111    ",
		"     1::::::::::1    ",
		"     1::::::::::1    ",
		"     111111111111    ",NULL
	};
	const char* num0[] =
	{
		"                     ",
		"      000000000      ",
		"    00:::::::::00    ",
		"  00:::::::::::::00  ",
		" 0:::::::000:::::::0 ",
		" 0::::::0   0::::::0 ",
		" 0:::::0     0:::::0 ",
		" 0:::::0     0:::::0 ",
		" 0:::::0 000 0:::::0 ",
		" 0:::::0     0:::::0 ",
		" 0:::::0     0:::::0 ",
		" 0::::::0   0::::::0 ",
		" 0:::::::000:::::::0 ",
		"  00:::::::::::::00  ",
		"    00:::::::::00    ",
		"      000000000      ",NULL
	};
	const char* HappyNewYear[] =
	{
		"                                                                         ",
		"  __    __       ___      .______   .______    ____     ____              ",
		" |  |  |  |     /   \\     |   _  \\  |   _  \\   \\   \\   /  \/          ",
		" |  |__|  |    /  ^  \\    |  |_)  | |  |_)  |   \\   \\_/  /             ",
		" |   __   |   /  /_\\  \\   |   ___/  |   ___/     \\_    _/             ",
		" |  |  |  |  /  _____  \\  |  |      |  |           |  |                  ",
		" |__|  |__| /__/     \\__\\ | _|      | _|           |__|                 ",
		"                                                                         ",
		"            .__   __.  ___________    __    ____                         ",
		"            |  \\ |  | |   ____\\   \\  /  \\  /   /                     ",
		"            |   \\|  | |  |__   \\   \\/    \\/   /                      ",
		"            |  . \`  | |   __|   \\            /                         ",
		"            |  |\\   | |  |____   \\    /\\    /                         ",
		"            |__| \\__| |_______|   \\__/  \\__/                          ",
		"                                                                         ",
		"                    ____    ____  _______     ___       .______          ",
		"                    \\   \\  /   / |   ____|   /   \\      |   _  \\     ",
		"                     \\   \\/   /  |  |__     /  ^  \\     |  |_)  |     ",
		"                      \\_    _/   |   __|   /  /_\\  \\    |      /      ",
		"                        |  |     |  |____ /  _____  \\   |  |\\  \\----. ",
		"                        |__|     |_______/__/     \\__\\  | _| \`._____| ",
		"                                                                         ",NULL

	};
	const char* tower[] = {
"																								 ",
"                                               .\'\'.										     ",
"                                              :_\\/_:    .										 ",
"             |                           .''. : /\\ :											 ",
"                *                       :_\\/_:'.:::.    \*\'\'*  * \'.\'/.\'					 ",
"             =	*      .--             : /\\ : :::::  '*_\\\/_*   -= o =- \    '  *				 ",
"            === *      / _ '             '..'  ':::'   * \/\\ *   .\'/.\\\'.            		 ",
"       *     |	*     | _ |     *             .__      *..*           .....  .---\"|		     ",
"     *       |	 _    | _ |	          _*   .-'||'-.       .--\'|  ||__ | _|    |				 ",
"      *      |  .-'|   | _ |      .-\'|  _.|  ||    || -|  -__  |   |  | __ ||      |			 ",
"   .-----.   |  |  |   |   |	 |' | |.    ||    || -|  |  | |   |  |    ||      |	             ",
"__'       ' /\"\\ |  \'-../   |...___|  '-' Anhvietcr \"\"  |__|   \'-\'   \'-.\'    '\`     |__",
"~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~   ",
"                                                                                          ",NULL
	};
	const char* banner[] = {
		"                                                 ",
		"                                                 ",
		":\'#######::::\'#####::::\'#######:::\'#######:: ",
		"\'##.... ##::\'##..  ##::\'##....##:\'##.... ## :",
		"..:::: :##:\'##:::: ##:..::::: ##:..::::: ##:    ",
		":\'#######:: ##:::: ##::'#######:: :\'#######::  ",
		"\'##:::::::: ##:::: ##:\'##:::::::: : ......## : ",
		" ##::::::::. ##:: ##:: ##::::::::\'##::::  ##:   ",
		" #########::. #####:: :######### : #######::     ",
		".........::::.....::::.........:: : .......:: :  ",
		"                                                 ",NULL
	};
	const char* animal[] = {
	"       *     ,MMM8&&.      *",
	"            MMMM88&&&&      ",
	"           MMMM88&&&&&&     ",
	"*          MMM88&&&&&&&     ",
	"           MMMM88&&&&&&     ",
	"            \'MMM88&&&&\'   ",
	"              \'MM8&&\'     ",
	"     |\\___/|               ",
	"     )     (      .       \'",
	"    =\\     /=              ",
	"      )===(             *   ",
	"     /     \\               ",
	"     |     |                ",
	"    /       \\              ",
	"    \\       /              ",
    "_/\\_/\\__  _/_/\\_/\\_/\\_/\\_",
    "|  |   ( (     |  |  |  |   ",
    "|  |    ) )    |  |  |  |   ",
    "|  |   (_(     |  |  |  |   ",
    "|  |           |  |  |  |   ",
    "Meoww Meoww    |  |  |  |   ",NULL
	};
	switch (time){
		case 0:
			display(num9, tower);
			break;
		case 1:
			display(num8, tower);
			break;
		case 2:
			display(num7, tower);
			break;
		case 3:
			display(num6, tower);
			break;
		case 4:
			display(num5, tower);
			break;
		case 5:
			display(num4, tower);
			break;
		case 6:
			display(num3, tower);
			break;
		case 7:
			display(num2, tower);
			break;
		case 8:
			display(num1, tower);
			break;
		case 9:
			display(num0, tower);
			break;
		default:
			display(HappyNewYear, animal, banner, tower);
			break;
	}
}
void Text::display(const char* num[], const char* tower[]){
	int i, x, y;
	x = MAX_X/2.5;
	y = MAX_Y/5;
	//in số
	i = 0;
	while (num[i] != 0) {
		gotoXY(x, y+i);
		Textcolor(i);
		cout << num[i] << endl;
		++i;
	}
	//in nhà
	i = 0;
	while (tower[i] != 0){
		gotoXY(MAX_X/3, MAX_Y/1.5+i);
		Textcolor(2);
		cout << tower[i] << endl;
		++i;
	}
}
void Text::display(const char* happy[], const char* animal[], const char* banner[], const char* tower[]){
	int i, x, y, rand;
	x = MAX_X/6; //6
	y = MAX_Y/12; //12
	rand = random(1, 2);
	if (rand == 1){
		//in banner 2017
		i = 0;
		while (banner[i] != 0){
			gotoXY(CENT_MAX-20, y+i);
			Textcolor(13);
			cout << banner[i] << endl;
			++i;
		}
	} else{
		//in chữ Happy New Year
		i = 0;
		while (happy[i] != 0){
			gotoXY(x, y+i);
			Textcolor(14);
			cout << happy[i] << endl;
			++i;
		}
	}
	//in hình con gà
	i = 0;
	while (animal[i] != 0){
		gotoXY(MIN, MIN+i);
		Textcolor(11);
		cout << animal[i] << endl;
			++i;
	}
	//in nhà
	i = 0;
	while (tower[i] != 0){
		gotoXY(MAX_X/3, MAX_Y/1.5+i);
		Textcolor(10);
		cout << tower[i] << endl;
		++i;
	}

}